name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: [self-hosted,aws-ec2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Docker
        run: |
            sudo apt-get update
            sudo apt-get install -y docker.io    

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose  

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven    

      - name: Add user to docker group
        run: |
          sudo usermod -aG docker $USER
          newgrp docker

      - name: Enable Docker BuildKit
        run: |
          export DOCKER_BUILDKIT=1   

      - name: Start Docker service
        run: |
          sudo systemctl start docker
          sudo systemctl enable docker     
          

      - name: Build with Maven
        run: mvn clean package -X

      - name: Build Docker image
        run: sudo docker build -t vikky225/customer-contacts-app:latest .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: sudo docker push vikky225/customer-contacts-app:latest

  deploy:
    needs: build
    runs-on: [self-hosted,aws-ec2]

    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose   

      - name: Pull Docker images
        run: |
          sudo docker pull postgres:13
          sudo docker pull vikky225/customer-contacts-app:latest

      - name: Remove existing db container if it exists
        run: |
         if [ $(sudo docker ps -a -q -f name=db) ]; then
          sudo docker rm -f db
         fi     

      - name: Remove existing app container if it exists
        run: |
         if [ $(sudo docker ps -a -q -f name=app) ]; then
         sudo docker rm -f app
         fi    

      - name: Run Postgres container
        run: |
          sudo docker run -d --name db \
            -e POSTGRES_DB=customer_contacts \
            -e POSTGRES_USER=user \
            -e POSTGRES_PASSWORD=password \
            -p 5433:5432 \
            postgres:13

      - name: Run customer-contacts-app container
        run: |
          sudo docker run -d --name app \
            --link db:db \
            -e SPRING_PROFILES_ACTIVE=docker \
            -p 8080:8080 \
            vikky225/customer-contacts-app:latest
      
    

